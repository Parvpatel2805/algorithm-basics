# Algorithm: Hashing Collision Resolution - Chaining
# Type: Hash Table, Collision Resolution
# Time Complexity: Average O(1), Worst O(n)
# Space Complexity: O(n)

initialize table as array of empty lists

function hashFunction(key, size):
    return key mod size

function insert(key, value):
    index = hashFunction(key, size)
    append (key, value) to table[index]

function search(key):
    index = hashFunction(key, size)
    for each (k, v) in table[index]:
        if k == key:
            return v
    return null

function delete(key):
    index = hashFunction(key, size)
    for each (k, v) in table[index]:
        if k == key:
            remove (k, v) from table[index]
            return
